{"version":3,"sources":["actions/books.js","components/CartList.jsx","components/TopMenu.jsx","components/Books.jsx","components/Filter.jsx","components/Sort.jsx","App.js","reducers/books.js","reducers/cart.js","sort.js","reducers/filter.js","reducers/index.js","store.js","index.js"],"names":["setBooks","books","type","payload","addBookToCart","book","removeBookFromCart","id","setFilter","value","setSort","sort","CartList","title","image","dispatch","useDispatch","List","selection","divided","verticalAlign","Item","Content","floated","Button","color","onClick","Image","avatar","src","TopMenu","totalPrice","totalAmount","cart","Menu","name","position","Popup","trigger","content","map","i","key","on","Books","addedCount","reduce","total","item","Card","wrapped","ui","Header","Description","author","extra","Icon","price","Filter","filterBy","Input","placeholder","onChange","e","target","Sort","useState","activeItem","setActiveItem","secondary","active","searchBooks","sortBy","orderBy","sortBooks","filter","toLowerCase","indexOf","filterBooks","App","useSelector","state","items","isReady","length","uniqBy","o","useEffect","a","axios","get","res","data","Container","Group","itemsPerRow","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","logger","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0e73d12.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchBooks = () => async (dispatch) => {\r\n  const res = await axios.get(\"/books.json\");\r\n  dispatch(setBooks(res.data));\r\n};\r\nexport const setBooks = (books) => ({\r\n  type: \"SET_BOOKS\",\r\n  payload: books,\r\n});\r\nexport const addBookToCart = (book) => ({\r\n  type: \"ADD_BOOK_TO_CART\",\r\n  payload: book,\r\n});\r\nexport const removeBookFromCart = (id) => ({\r\n  type: \"REMOVE_BOOK_FROM_CART\",\r\n  payload: id,\r\n});\r\nexport const setFilter = (value) => ({\r\n  type: \"SET_FILTER\",\r\n  payload: value,\r\n});\r\nexport const setSort = (sort) => ({\r\n  type: \"SET_SORT\",\r\n  payload: sort,\r\n});\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Image, List } from \"semantic-ui-react\";\r\n\r\nexport const CartList = ({ title, id, image, removeBookFromCart }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <List selection divided verticalAlign=\"middle\">\r\n      <List.Item>\r\n        <List.Content floated=\"right\">\r\n          <Button color=\"red\" onClick={() => dispatch(removeBookFromCart(id))}>\r\n            Удалить\r\n          </Button>\r\n        </List.Content>\r\n        <Image avatar src={image} />\r\n        <List.Content>{title}</List.Content>\r\n      </List.Item>\r\n    </List>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Menu, Popup } from \"semantic-ui-react\";\r\nimport { CartList } from \"./CartList\";\r\n\r\nexport const TopMenu = ({\r\n  totalPrice,\r\n  totalAmount,\r\n  cart,\r\n  removeBookFromCart,\r\n}) => {\r\n  return (\r\n    <Menu>\r\n      <Menu.Item name=\"shop\">Магазин книг</Menu.Item>\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item name=\"total\">\r\n          Итого : &nbsp; <b>{totalPrice}</b> &nbsp; руб.\r\n        </Menu.Item>\r\n        <Popup\r\n          trigger={\r\n            <Menu.Item name=\"cart\">\r\n              Корзина (<b>{totalAmount}</b>)\r\n            </Menu.Item>\r\n          }\r\n          content={\r\n            cart &&\r\n            cart.map((cart, i) => (\r\n              <CartList\r\n                removeBookFromCart={removeBookFromCart}\r\n                {...cart}\r\n                key={i}\r\n              />\r\n            ))\r\n          }\r\n          on=\"click\"\r\n        />\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Card, Icon, Image, Button } from \"semantic-ui-react\";\r\n\r\nexport const Books = ({ book, addBookToCart, cart }) => {\r\n  const dispatch = useDispatch();\r\n  const addedCount = cart.reduce(\r\n    (total, item) => total + (book.id === item.id ? 1 : 0),\r\n    0\r\n  );\r\n  return (\r\n    <Card>\r\n      <Image src={book.image} wrapped ui={false} />\r\n      <Card.Content>\r\n        <Card.Header>{book.title}</Card.Header>\r\n        <Card.Description>{book.author}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"rub\" />\r\n        {book.price}\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Button onClick={() => dispatch(addBookToCart(book))}>\r\n          <span>Добавить в корзину {addedCount > 0 && `(${addedCount})`}</span>{\" \"}\r\n        </Button>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Menu, Input } from \"semantic-ui-react\";\r\n\r\nexport const Filter = ({ setFilter, filterBy }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Menu.Item>\r\n      <Input\r\n        placeholder=\"Введите запрос\"\r\n        value={filterBy}\r\n        onChange={(e) => dispatch(setFilter(e.target.value))}\r\n      ></Input>\r\n    </Menu.Item>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { Filter } from \"./Filter\";\r\n\r\nexport const Sort = ({ setSort, setFilter, filterBy }) => {\r\n  const dispatch = useDispatch();\r\n  const [activeItem, setActiveItem] = useState(\"all\");\r\n  const onClick = (name) => {\r\n    setActiveItem(name);\r\n    dispatch(setSort(name));\r\n  };\r\n  return (\r\n    <Menu secondary>\r\n      <Menu.Item\r\n        name=\"all\"\r\n        onClick={() => onClick(\"all\")}\r\n        active={activeItem === \"all\"}\r\n      >\r\n        Все\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        name=\"high-price\"\r\n        onClick={() => onClick(\"high-price\")}\r\n        active={activeItem === \"high-price\"}\r\n      >\r\n        Цена (дорогие)\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        name=\"low-price\"\r\n        onClick={() => onClick(\"low-price\")}\r\n        active={activeItem === \"low-price\"}\r\n      >\r\n        Цена (дешевые)\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        name=\"author\"\r\n        onClick={() => onClick(\"author\")}\r\n        active={activeItem === \"author\"}\r\n      >\r\n        Автор\r\n      </Menu.Item>\r\n      <Filter filterBy={filterBy} setFilter={setFilter} />\r\n    </Menu>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Card } from \"semantic-ui-react\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport uniqBy from \"lodash/uniqBy\";\r\n\r\nimport \"./App.scss\";\r\nimport { fetchBooks } from \"./actions/books\";\r\nimport { setSort } from \"./actions/books\";\r\nimport { setFilter } from \"./actions/books\";\r\nimport { removeBookFromCart } from \"./actions/books\";\r\nimport { addBookToCart } from \"./actions/books\";\r\nimport { TopMenu } from \"./components/TopMenu\";\r\nimport { Books } from \"./components/Books\";\r\nimport { Sort } from \"./components/Sort\";\r\n\r\nconst sortBooks = (books, sortBy) => {\r\n  switch (sortBy) {\r\n    case \"all\":\r\n      return books;\r\n    case \"high-price\":\r\n      return orderBy(books, \"price\", \"desc\");\r\n    case \"low-price\":\r\n      return orderBy(books, \"price\", \"asc\");\r\n    case \"author\":\r\n      return orderBy(books, \"author\", \"asc\");\r\n    default:\r\n      return books;\r\n  }\r\n};\r\n\r\nconst filterBooks = (books, filterBy) =>\r\n  books.filter(\r\n    (book) =>\r\n      book.title.toLowerCase().indexOf(filterBy.toLowerCase()) >= 0 ||\r\n      book.author.toLowerCase().indexOf(filterBy.toLowerCase()) >= 0\r\n  );\r\n\r\nconst searchBooks = (books, sortBy, filterBy) => {\r\n  return sortBooks(filterBooks(books, filterBy), sortBy);\r\n};\r\nexport const App = () => {\r\n  const books = useSelector(\r\n    (state) =>\r\n      state.books.items &&\r\n      searchBooks(state.books.items, state.sort.sortBy, state.filter.filterBy)\r\n  );\r\n  const isReady = useSelector(({ books }) => books.isReady);\r\n  const filterBy = useSelector(({ filter }) => filter.filterBy);\r\n  const sortBy = useSelector(({ sort }) => sort.sortBy);\r\n  const totalPrice = useSelector(({ cart }) =>\r\n    cart.books.reduce((total, book) => total + book.price, 0)\r\n  );\r\n  const totalAmount = useSelector(({ cart }) => cart.books.length);\r\n  const cart = useSelector(({ cart }) => uniqBy(cart.books, (o) => o.id));\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchBooks());\r\n  }, [dispatch]);\r\n  return (\r\n    <Container>\r\n      <TopMenu\r\n        totalPrice={totalPrice}\r\n        totalAmount={totalAmount}\r\n        cart={cart}\r\n        removeBookFromCart={removeBookFromCart}\r\n      />\r\n      <Sort\r\n        setSort={setSort}\r\n        setFilter={setFilter}\r\n        sortBy={sortBy}\r\n        filterBy={filterBy}\r\n      />\r\n      <Card.Group itemsPerRow={4}>\r\n        {isReady\r\n          ? books &&\r\n            books.map((book) => (\r\n              <Books\r\n                book={book}\r\n                key={book.id}\r\n                addBookToCart={addBookToCart}\r\n                cart={cart}\r\n              />\r\n            ))\r\n          : \"Загрузка...\"}\r\n      </Card.Group>\r\n    </Container>\r\n  );\r\n};\r\n","const initialState = {\r\n    items : null,\r\n    isReady : false\r\n}\r\n\r\nexport const books = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case \"SET_BOOKS\":\r\n            return {\r\n                ...state,\r\n                items : action.payload,\r\n                isReady : true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    books: []\r\n}\r\n\r\nexport const cart = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_BOOK_TO_CART\":\r\n            return {\r\n                ...state,\r\n                books: [\r\n                    ...state.books,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case \"REMOVE_BOOK_FROM_CART\":\r\n            return {\r\n                ...state,\r\n                books: state.books.filter(book => book.id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    sortBy: ''\r\n}\r\n\r\nexport const sort = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_SORT\":\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    filterBy: ''\r\n}\r\n\r\nexport const filter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_FILTER\":\r\n            return {\r\n                ...state,\r\n                filterBy: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { books } from './books'\r\nimport { cart } from './cart'\r\nimport { sort } from '../sort'\r\nimport { filter } from './filter'\r\n\r\nexport const rootReducer = combineReducers({\r\n    books,\r\n    cart,\r\n    sort,\r\n    filter\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(logger, thunk));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { App } from \"./App\";\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}